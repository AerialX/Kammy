LINKFILE	:= common/kammy.x
INCLUDE		+= common ../libkammy/include $(SOURCE)
MAPFILE		:= $(BUILDDIR)/kammy.map
TEXTBASE	:= 0xFAC3B01000000000
SOURCE		+= common

CFLAGS		+= -nodefaultlibs -nostdlib -m64 \
			   -fno-builtin -fno-exceptions \
			   -Os -Wall $(foreach dir,$(INCLUDE),-I$(dir)) \
			   -DLV2
CXXFLAGS	:= $(CFLAGS) -fno-rtti
CFLAGS		+= --std=gnu99
LDFLAGS		:= -L. -s -T $(LINKFILE) \
			   -Ttext $(TEXTBASE) \
			   -Map $(MAPFILE) --no-demangle

CC			:= ppu-gcc
CXX			:= ppu-g++
LD			:= ppu-ld
OBJCOPY		:= ppu-objcopy
XXD			:= xxd -r -p

CFILES		:= $(foreach dir,$(SOURCE),$(wildcard $(dir)/*.c))
CXXFILES	:= $(foreach dir,$(SOURCE),$(wildcard $(dir)/*.cpp))
SFILES		:= $(foreach dir,$(SOURCE),$(wildcard $(dir)/*.S))
OFILES		:= $(CFILES:%.c=$(BUILDDIR)/%.o) \
			   $(CXXFILES:%.cpp=$(BUILDDIR)/%.o) \
			   $(SFILES:%.S=$(BUILDDIR)/%.o) \

all: $(TARGET)

clean:
	rm -rf $(TARGET) $(BUILDDIR) $(OFILES)

objdump: $(TARGET)
	@ppu-objdump -D -EB -b binary -m powerpc:common64 $(BUILDDIR)/$(TARGET)

builddir:
	@mkdir -p $(BUILDDIR) $(foreach dir,$(SOURCE),$(BUILDDIR)/$(dir))

$(OFILES): builddir

$(BUILDDIR)/%.o: %.c
	@echo "[CC]  $<"
	@$(CC) -c $(CFLAGS) $< -o $@

$(BUILDDIR)/%.o: %.cpp
	@echo "[CXX] $<"
	@$(CXX) -c $(CXXFLAGS) $< -o $@

$(BUILDDIR)/%.o: %.S
	@echo "[CC]  $<"
	@$(CC) -c $< -o $@


GET_MAIN = '/^ +0x[0-9a-z]+ +_start$$/ {print $$1}'
GET_TEXT = '/^\.text +0x[0-9a-z]+ +0x[0-9a-z]+$$/ {print $$2}'
GET_BSS_END = '/^ +0x[0-9a-z]+ +__bss_end = \.$$/ {print $$1}'
GET_BSS_START = '/^ +0x[0-9a-z]+ +__bss_start = \.$$/ {print $$1}'
$(TARGET): $(OFILES)
	@echo "[LD]  $@"
	@$(LD) $(LDFLAGS) $(OFILES) -o $(BUILDDIR)/$@
	@echo 1337baad00000020 | $(XXD) > $@
	@awk $(GET_MAIN) $(MAPFILE) | $(XXD) >> $@
	@awk $(GET_TEXT) $(MAPFILE) | $(XXD) >> $@
	@awk $(GET_BSS_END) $(MAPFILE) | $(XXD) >> $@
	@cat $(BUILDDIR)/$@ >> $@
	@dd bs=1 count="`calc \`awk $(GET_BSS_END) $(MAPFILE)\` - \`awk $(GET_BSS_START) $(MAPFILE)\` + 0x10`" if=/dev/zero >> $@ 2> /dev/null

.PHONY: builddir clean all
